pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

-- composed animation
function _init()
    position = {
        x = 20,  -- Centered x position
        y = 64
    }
    a = { frames = str2frames("59,14,8,7,0,-6|67,14,8,6,0,-5|75,15,8,5,0,-4|83,17,8,3,0,-2")
    }

    selection_level = { "frame", "sprite", "ox", "oy", "print"}
    level = 1
    selection_i = 1

    play_animation = false
    has_selected_frame = false
    selected_frame = 1
    selected_sprite = 1

    max_frame_width = calc_max_w(a.frames)
    
    scroll_y = 0
end

function _update60()
    -- animate sprites
    if play_animation then
        local cur_animation = a
        if a.ai < #a.frames + 1 - a.speed then
            a.ai += a.speed
        else
            a.ai = 1
        end
    end
    sprites = a.frames[selected_frame].sprites

    -- selection level
    if(btnp(‚ùé)) level += 1 if(level>#selection_level) level = 1 selected_sprite = 1
    if(btnp(üÖæÔ∏è)) level -= 1 if(level<1) level = #selection_level

    -- select frame
    if selection_level[level]=="frame" then
        if(btnp(‚¨áÔ∏è)) selected_frame -= 1 if(selected_frame<1) selected_frame = #a.frames
        if(btnp(‚¨ÜÔ∏è)) selected_frame += 1 if(selected_frame>#a.frames) selected_frame = 1
    end

    -- select sprite
    if selection_level[level]=="sprite" then
        if(btnp(‚¨áÔ∏è)) selected_sprite -= 1 if(selected_sprite<1) selected_sprite = #a.frames[selected_frame].sprites
        if(btnp(‚¨ÜÔ∏è)) selected_sprite += 1 if(selected_sprite>#a.frames[selected_frame].sprites) selected_sprite = 1
    end

    -- select offset
    if selection_level[level]=="ox" then
        if(btnp(‚¨áÔ∏è)) a.frames[selected_frame].sprites[selected_sprite].ox -= 1
        if(btnp(‚¨ÜÔ∏è)) a.frames[selected_frame].sprites[selected_sprite].ox += 1
    end
    if selection_level[level]=="oy" then
        if(btnp(‚¨áÔ∏è)) a.frames[selected_frame].sprites[selected_sprite].oy -= 1
        if(btnp(‚¨ÜÔ∏è)) a.frames[selected_frame].sprites[selected_sprite].oy += 1
    end

    -- select print
    if selection_level[level]=="print" then
        if(btnp(‚¨ÜÔ∏è)) printh(frames2str(a.frames),"@clip")
    end

    -- Adjust scroll_y to center the selected frame
    local card_height = 16 + (#a.frames[selected_frame].sprites - 1) * 8
    local target_y = (selected_frame - 1) * (card_height + 4)
    local screen_center_y = 64 - card_height // 2
    scroll_y = target_y - screen_center_y
end

function _draw()
    cls()
    pset(position.x, position.y, 8) -- Center point
    rect(
        position.x - 4,
        position.y - 12,
        position.x + 3,
        position.y + 1,
        14
    )
    draw_f(a.frames[selected_frame], position, false, max_frame_width)
    print(selection_level[level]..selection_i, 10, 10, 7)
    print(#a.frames[selected_frame].sprites, 10, 20, 7)
    
    -- draw sprite frames
    local y_offset = -scroll_y
    for i, frame in pairs(a.frames) do
        local parts = #frame.sprites
        local card_height = 16 + (parts - 1) * 8
        local color = 7

        -- highlight frame
        if(selection_level[level]=="frame" and i==selected_frame) color = 9

        print(i, 50, y_offset, color)
        rect(49, y_offset, 127, y_offset + card_height)

        -- draw parts
        for q, sprite in pairs(frame.sprites) do
            color = 7
            -- highlight sprite
            if(selection_level[level]=="sprite" and q==selected_sprite and i==selected_frame) color = 9
            print("‚ñ∂", 54, y_offset + 2 + (q - 1) * 8, color)
            
            -- reset color for param level
            if(selection_level[level] ~= "frame" and selection_level[level] ~= "sprite") color = 7
            
            for l, part in pairs({"ox", "oy"}) do
                color = 7
                if(selection_level[level] == part and q == selected_sprite and i == selected_frame) color = 9
                print(part..":"..sprite[part], 40 + l * 20, y_offset + 2 + (q - 1) * 8, color)
            end
        end
        
        y_offset = y_offset + card_height + 4  -- Adding a gap between cards
    end
end

function draw_f(f, p, fx, fw)
    if f.pal_rep then
        for pr in all(f.pal_rep) do
            pal(pr[1], pr[2])
        end
    end

    local bx = p.x - fw / 2
    for s in all(f.sprites) do
        local x = bx + s.ox
        local y = p.y + s.oy
        if fx then x = bx + (fw - s.ox - s.w) end
        sspr(s.x, s.y, s.w, s.h, x, y, s.w, s.h, fx and not s.fx or s.fx, s.fy)
    end

    pal()
end

-- Function to calculate the bounding box width of a single frame
function calc_frame_w(f)
    local min_x, max_x = 127, -127
    for s in all(f.sprites) do
        local left, right = s.ox, s.ox + s.w
        if left < min_x then min_x = left end
        if right > max_x then max_x = right end
    end
    return max_x - min_x
end

-- Function to calculate the maximum width among all frames
function calc_max_w(fs)
    local max_w = 0
    for f in all(fs) do
        local w = calc_frame_w(f)
        if w > max_w then max_w = w end
    end
    return max_w
end

function str2frames(_str)
    local frames = {}
    for str_f in all(split(_str, "|")) do
        local frame = { sprites = {}, pal_rep = {} }
        local parts = split(str_f, "^")

        -- Handle sprites part
        for str_s in all(split(parts[1], "@")) do
            local params = split(str_s, ",")
            local sprite = list2sprite(params)
            add(frame.sprites, sprite)
        end

        -- Handle palette replacements if they exist
        if #parts > 1 then
            for str_p in all(split(parts[2], ",")) do
                local pal_pair = split(str_p, ":")
                add(frame.pal_rep, { pal_pair[1], pal_pair[2] })
            end
        end

        add(frames, frame)
    end
    return frames
end
function frames2str(_frames)
    local ret = ""
    for i, frame in pairs(_frames) do
        -- Convert sprites part to string
        local frame_str = ""
        for j, sprite in pairs(frame.sprites) do
            frame_str = frame_str .. sprite.x .. "," .. sprite.y .. "," .. sprite.w .. "," .. sprite.h .. "," .. sprite.ox .. "," .. sprite.oy .. "," .. tostring(sprite.fx) .. "," .. tostring(sprite.fy)
            if j < #frame.sprites then
                frame_str = frame_str .. "@"
            end
        end

        -- Convert palette replacements to string
        local pal_str = ""
        if #frame.pal_rep > 0 then
            pal_str = "^"
            for k, pal in pairs(frame.pal_rep) do
                pal_str = pal_str .. pal[1] .. ":" .. pal[2]
                if k < #frame.pal_rep then
                    pal_str = pal_str .. ","
                end
            end
        end

        -- Combine frame_str and pal_str
        ret = ret .. frame_str .. pal_str
        if i < #_frames then
            ret = ret .. "|"
        end
    end
    return ret
end
-- Your provided list2sprite function
function list2sprite(_list)
    local fx = _list[7] == "true"
    local fy = _list[8] == "true"
    return { x = _list[1], y = _list[2], w = _list[3], h = _list[4], ox = _list[5], oy = _list[6], fx = fx, fy = fy }
end
-- converts anything to string, even nested tables
function tostring(any)
    if type(any) == "function" then
        return "function"
    end
    if any == nil then
        return "nil"
    end
    if type(any) == "string" then
        return any
    end
    if type(any) == "boolean" then
        if any then return "true" end
        return "false"
    end
    if type(any) == "table" then
        local str = "{ "
        for k, v in pairs(any) do
            str = str .. tostring(k) .. "->" .. tostring(v) .. " "
        end
        return str .. "}"
    end
    if type(any) == "number" then
        return "" .. any
    end
    return "unkown"
    -- should never show
end



__gfx__
00000000eeeeeeee09999990000999999090999999090446644004466440044664404464404460555004466440000dd0000000004444f0000000000000000777
00000000eeeeeeee09999999090999999990999999994046640440466404404664044464044444f00040446604f0d00444444f04440000000000000077777777
00700700e000000e999ffff990999ffff90999ffff90f046640ff0cccc0f5046640f04f50f4460000004f4666000004440000044444ccc400077777777777777
00077000e000000e99ffffff0099ffffff099ffffff000cccc0000c00c0050cccc000cc500cccf00000004ccc000044d000000d4444000000000077777770000
00077000ee0deeeef9f73f73f0f9f73f73ff9f73f73f00c00c000040040050c00c000c0c00c0c00000000c000c00c000d00000d0440000000000000000000777
00700700ee00eeeefffffffff0ffffffffffffffffff0040040000000000004004000404004040000000040000440000d000000d0c0000000000000000077777
00000000eeeeeeee0fff77ff000fff77ff00ffff7ff0000000000000000000000000000000000000000000000000000000000000040000000000007777770000
00000000eeeeeeee00fffff00000fffff0000fffff00044470004000004470004440000d44400d40000044700044700000000400446600000000000000000770
eeeeeeeeeeeeeeee00999990000099999090999999094044700444700d44700d4474f0d044400d447004447004447dd000004404046640000000000000000077
eeeeee8eeee99eee0999999909099999999099999999f0447d0f4470d04470d0447000d0444f000fc0f04470f04470000004444f04464dd00000000770000077
eeeee0e8ee9799ee9999fff9909999fff90999ffff90004ccc0044c0004fd000c4cdd0004cdd004c0d0044c000d4ccc000dd44400c00c0000000070000007770
eeee0ee8ee9999ee99ffffff0099ffffff099ffffff00dd00040dd0c00c00d4c00000d04c000d0000d00d00cdd0000040d0040c0040040000000000000700000
eee0eeeeee9799ee9fffffff009ff73f730f9fffffff00000000000400c0d00000000000000000000000d04000000000d00df0c0000000000000000000000770
8e0eeeeeee9799ee9fffffff009fffffff0fffffffff000000000000040000000000000000000000000d00000000000000000040000000000000000000000077
e0eeeeeeee9999ee0fff77f0000fff77f000fff77ff0000000f0000000f0000040f0407000000000000000000000000070000070077000000000000000000770
eeeeeeeeeeeeeeee00ffff000000ffff00000fffff00000004000000040000700400040700f00070800000000000000077700077777700000007700000700007
00099990000000000000000000000000000000000000000040000004400404074000047740480407000000000000000077777070077000000077700007700070
009999990000000000000000000000000000000000000006400044640004047740040cccc4000477480080708000000077700000000000000077000007000007
09999999900000000000000000000000000000000000046664040464000f0cccc0004c00c0000cccc04004870040000070000000000000000770000770077070
099999999f00000000000000000000000000000000004446660f0ccc00000c00c00f0400400f4c00c40f48774480000000000000000000077700077000000000
099999999f000000000000000000000000000000000040046c0000d0c00004004000000000000000000000000000000000000000000007770000000000000700
99999999900000000000000000000000000000000000400c00c000d4000000000000000000000000000000000000000000000000000000000000000000000000
90f99999000000000000000000000000000000000000f00400400d00000000000000000000000000000000000000000000000000000000007770077007700070
000f9990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070000007777077070070777
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007000007777007000000707
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007700000777007700007000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077000000077700700007000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007700700000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007707700700000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070000000077007007000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000770000000077070000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007700000000770070000000000
00333333000033333300003333330000333333000033333300020000200200002022000022300000322222202222200022222000000000000700000000000000
03333333300333333330033333333003333333300333333330202222022022220230222203022222020222202022200200222207777777000000777777000000
333333333333aa333333333333333333333333333333333333302222033022220300222200002220003222230322223030022350000777777000000077700000
33aa33333333aa33aa33333333333333aa33aa333333333333005005000022220000222200002220000222200002205000500000000000777700000000770000
33aa33aa33333333333333aa33aa3333333333333333333333000000000050050000500500005050000500500050000000000000000000007770000000077000
333333333333333333333333333333333333333333aa33aa33223220022322002000002222223222222300002200000000000000000000000777000000007000
33333333333333333333333333333333333333333333333333022202302220230232230232000023200000222220000000000000000000000077000000007000
03388833300338883330033888333003388833300338883330025200002220000222000222500022200000222222000000000000000000000077000000077000
00333333000033333300003333330000333333000033333300000500002220000505000500000022200002222200200000000000000000000077000000070000
00033330000003333000000333300000033330000003333000000000000550000000000000000050050002222000030000000000000000000770000000700000
00333300000033330000003333330000333333000033333300000033333300000000033333000000000050005000000000000000000000007700000000000000
03333333000333333300033333333003333333300333333330000333333330000000333333300000000000000000000000000000000000007000000000000000
33333a3330333a333330333333333333333333333333333330003333333330000003333333330000000000000000000000000000000000070000000000000000
3333a33330333a3333303333333333333aa333333333333330003333333330003003333333330000000000000000000000000000000000000000000000000000
3333333333333333383333aa33aa33333aa33a3333333a3330003333aa3335222223383aa3330000000000000000000000000000000000000000000000000000
33aa33338333aa3388333333333333333333333333333a3330003333aa3330000000000000000000000000000000000000000000000000000000000000000000
33aa33383333aa338833333888333333333333333388333300003383333300000000000000000000000000000000000000000000000000000000000000000000
33333383333333338333033888833003338883300338833000002338333000000000000000000000000000000000000000000000000000000000000000000000
03333333300333333330003333330000333333000033880000022233830000000000000000000000000000000000000000000000000000000000033333300000
00000000333330000000000333300000033330000000000000023220000000000000000000000000000000000000000000000000000000000000333333330000
00000003336333000000000000000000000000000000000005222200000000000000000000000000000000000000000000000000000000000003333333333000
000000336333633000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033aa333333000
000300333636333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033aa33aa33000
50000033836a33300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000338883330000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033333300000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022322000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002220230000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002520000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000333333000000000000000000000000000000000000000000333333000000000000000000000000000000000000000000000000000000000000000000000
00003333333300000000000000000000000003333330000000003333333300000000000000000000000033333300000000333300000000000000000000000000
00033333333330000000033333300000000033333333000000033333333330000000033333300000000333333330000003333333000000000033330000000000
00033aa3333330000000333333330000000333333333300000033333333330000000333333330000003333333333000033333a33300000000333333300000000
00033aa33aa33000000333333333300000033aa33333300000033aa33aa3300000033aa3333330000033aa33333300003333a33330000000333a333330000000
000333333333300000033aa33aa3300000033aa33aa33000000333333333300000033aa33aa330000033aa33aa3300003333333333000000333a333330000000
00033333333330000003333333333000000333333333300000033333333330000003333333333000003333333333000033aa3333830000003333333833000000
00003388833300000003333333333000000333333333300000003388833300000003333333333000003333333333000033aa33383300000033aa338833000000
000003333330000000033333333330000000338883330000000003333330000000033333333330000003388833300000333333833300000033aa338833000000
00000033330000000000338883330000000003333330000000000033330000000000338883330000000033333300000003333333300000003333338333000000
00000223220000000000033333300000000000333300000000000222222300000000033333300000000022222200000000022222000000000333333330000000
00000022202300000000023333000000000002222223000000000023200000000000023333000000000020222200000000020222000000000002222200000000
00000022200000000000002322300000000000232000000000000022200000000000002320230000000003222230000000003222230000000020022220000000
00000022200000000000002220000000000000222500000000000022200000000000002220000000000000222200000000000022050000000003002235000000
00000005500000000000005050000000000000500000000000000050050000000000005050000000000000500500000000000500000000000000050000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00006600333333000000000033333300000000003333330000000333333000000000000000000000000000000000000000000000000000000000000000000000
00060003333333300000000333333330000000033333333000003333333300000000033333300000000000000000000000000000000000000000000000000000
00600033333333330000003333333333000000333333333300033333333330000000333333330000000000000000000000000000000000000000000000000000
06000633333333330000003333333333000000333333333300033aa3333330000003333333333000000000003333330000000000000000000000000000000000
06006033aa33aa33000000333aa33aa3000000333aa33aa300033aa33aa33000000333aa33333000000000033333333000000000000000000000000000000000
0600003333333333000000333333333300000033363333330003333333333000000333aa33a33000000000333333333000000000000000000000000000000000
00000033388833330000003663888333000000333368833300033333333330000003333333333000000000333333333000000000000000000000000000000000
000003033888833000000063338888300000000333868830000033888333000000033333333330000000003333aa333000000000000000000000000000000000
000000203333330000000000233333000000000033363360000003333330000000003338883300000000003333aa333000000000000000000000000000000000
00000002233330000000000223333000000000022233300600003033333000000000033333300000000000338333330000000000033333000000000003333300
00000002222200000000000222220000000000022222000000000222220000000000303333300000000000233833300000000000333633300000000033333330
00000022222000000000002222200000000000222220000000000022200000000000022222000000000002223383000000000003363336330000000333333333
00000022250000000000002222000000000000222200000000000022200000000000002220000000000002322000000000003003336363330000300333333333
000005000000000000000500050000000000050005000000000000505000000000000022200000000005222200000000050000033836a33305222223383aa333
00000000aaaaa5a0155555510000000066666666e555555ee5e5e5e500070000eeeeeeee0ccccc00c000cccc0c000c000000000067000000ee67777777777777
00000000aaaa5a5a55555555000000006666666655555555e5e5e5e50000000055555555c11111c0c00c1111c1c0c1c00000000067000000e666666666666666
00000000aaaaaaa0555555550000000066666666e565665ee5e5e5e500000000e565665e0c111c0c1c0c11ccc1cc11c000000dd0670000006700000000000000
00000000aaaa5a5a555555557770000766666666e565665e5e5e5e5e00000000e565665e00c1c0cc1ccc1c00c1c11c00d0d0d22d670000006700000000000000
00000000aaaaa5a0555555550000000066666666e565665e5e5e5e5e00000000e565665e0cc1c0c1c1cc1c00c111c00d2d2d2dd0670000006700000000000000
00000000aaaa5a5a555555550000000066666666e565665e5e5e5e5e00070000e565665ec1c1c0c111cc1c00c1c11c0d2d2d222d670000006700000000000000
00000000aaaaaaa0555555550000000077777777e565665e5e5e5e5e00070000e565665ec111c0c1c1cc11ccc1cc11cd222ddd2d670000006700000000000000
00000000aaaa5a5a155555510000000055555555ee5555eee5e5e5e500070000ee5555ee0c11cc11c11c1111c1c0c1c0d2d222d0670000006700000000000000
eeeeeeee009999000555555000000000000000000000000000000000000000000000000000cc00cc0cc0cccc0c000c000d0ddd00000000006700000000000000
ee8888ee09999990566bb66500000000000000000000000000000000000000000000000000888088808888088088808880088800000000006700000000000000
e88888ee99999999566bb66500000000000000000000000000000000000000000000000008222822282222822822282228822280000000006700000000000000
e888828e999999995bbbbbb500000000000000000000000000000000000000000000000000882828282222828282882888288800000000006700000000000000
e888888e099999905bbbbbb500000000000000000000000000000000000000000000000000828828282882822882882280822800000000006700000000000000
e88888ee00999900566bb66500000000000000000000000000000000000000000000000008288828282882828282882880888280000000006600000000000000
ee888eee00099000566bb6650000000000000000000000000000000000000000000000000822282228288282282228222822280000000000e667777777777777
ee222eee00090000055555500000000000000000000000000000000000000000000000000088808880800808808880888088800000000000ee66666666666666
0000000000000000000000000000000000000000000000000800000000000080000000007770000000000000000000000000000000000000ee77777777777777
0000000000000000000000000000000000000000000000000008080f00800808000000000777700000000000000000000000000000000000e666666666666666
00000000000000000000000000000000000000000000000000078840080700000000000000007700000000000000000000000000000000006600000000000000
000000000000000000000000000000000000000000000000404070000048700f000000000000077000000000000000000000000000000000600bbbbbbbbbbbbb
00000000000000000000000000000000000000000000000040477400004774040000000000000770000000000000000000000000000000006011333333333333
000000000000000000000000000000000000000000000000f0cccc0040cccc400000000000007700000000000000000000000000000000006001111111111111
00000000000000000000000000000000000000000000000000c00c0004c00c000000000007777000000000000000000000000000000000006600000000000000
00000000000000000000000000000000000000000000000000400400f0400400000000007770000000000000000000000000000000000000e667777777777777
00000800000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000f00000000008008080000000000080800000000080800000000000000000000000000000000000000000000000000000000000000000000000000
00000007880000000000080700000000000000800080000000800080000000800000000000000000000000000000000000000000000000000000000000000000
000040407000000000000048700f0000000000070800000000070800000800000000000000000000000000000000000000000000000000000000000000000000
00004047740000000000004774040000000080407000000080407000080008800000000000000000000000000000000000000000000000000000000000000000
0000f0cccc000000000040cccc400000000000477480000000477480080708000000000000000000000000000000000000000000000000000000000000000000
000000c00c000000000004c00c000000000000cccc04000000cccc04004870040000000000000000000000000000000000000000000000000000000000000000
00000040040000000000f040040000000000f4c00c400000f4c00c40f48774480000000000000000000000000000000000000000000000000000000000000000
